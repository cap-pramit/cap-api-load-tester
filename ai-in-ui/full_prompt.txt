You will need to write me a pseudocode to generate a UI component using below element schema:
## BEGIN ELEMENT DEFINITIONS ##

class Row:
    style = {} # style for the row
    gutter = [] # spacings between the columns

class Column:
    span = 24 # 1-24 base on num_of_columns_in_row, value = Math.floor(24 / num_of_columns_in_row)
    style = {} # style for the column

class TextBox:
    field = '' # field name from schema for this component
    label = '' # label of the component
    value = '' # state variable value
    style = {} # style of the component
    def onChange(self, event):
        # set state variable with event.target.value
        pass

class Radio:
    label = ''  # label of the component
    value = ''  # state variable value

class RadioButtonGroup:
    field = '' # field name from schema for this component
    label = '' # label of the component
    value = '' # state variable value
    style = {} # style of the component
    buttons = [] # list of Radio class objects
    def onChange(self, event):
        # set state variable with event.target.value
        pass

class Dropdown:
    field = '' # field name from schema for this component
    label = '' # label of the component
    value = '' # state variable value
    style = {} # style of the component
    def onChange(self, event):
        # set state variable with value param
        pass

class Date:
    field = '' # field name from schema for this component
    label = '' # label of the component
    value = '' # state variable value
    style = {} # style of the component
    def onChange(self, event):
        # set state variable with value param
        pass

def initializeState(field = '', schema = {}):
    # initializes the state for the component
    pass

def setDataToState(field, value):
    # sets data to the state
    pass

def createRow(style: dict, columns: list) -> Row:
    # takes a list of columns and other params and creates a row layout
    pass

def createColumn(span: int, style: dict, content: any) -> Column:
    # takes content and other params and creates a column object to be put inside row
    pass

def createTextBox(field: str, label: str, value: str, style: dict, onChange: function) -> TextBox:
    # takes params and style to render a input / text box component for the form, adds the onChange event handler to handle form input change
    pass

def createRadioButtons(field: str, label: str, value: str, style: dict, onChange: function) -> RadioButtonGroup:
    # takes params and style to render a radio button group component for the form, adds the onChange event handler to handle form input change
    pass

def createDropdown(field: str, label: str, value: str, style: dict, onChange: function) -> Dropdown:
    # takes params and style to render a dropdown or select component for the form, adds the onChange event handler to handle form input change
    pass

def createDate(field: str, label: str, value: str, style: dict, onChange: function) -> Date:
    # takes params and style to render a date component for the form, adds the onChange event handler to handle form input change
    pass

## END ELEMENT DEFINITIONS ##

I want you to write a code to generate the create customer form for the following Customer data specifications:

{
  "title": {
    "type": "enum",
    "defaultValue": "mr",
    "uiType": "dropdown",
    "possibleValues": [
      "mr",
      "mrs",
      "ms",
      "others"
    ]
  },
  "firstName": {
    "type": "string",
    "defaultValue": ""
  },
  "middleName": {
    "type": "string",
    "defaultValue": ""
  },
  "lastName": {
    "type": "string",
    "defaultValue": ""
  },
  "dob": {
    "type": "date",
    "defaultValue": "current_date"
  },
  "gender": {
    "type": "enum",
    "defaultValue": "male",
    "uiType": "radio",
    "possibleValues": [
      "male",
      "female",
      "others"
    ]
  },
  "mobile": {
    "type": "string",
    "defaultValue": ""
  },
  "houseFlatNo": {
    "type": "string",
    "defaultValue": ""
  },
  "street": {
    "type": "string",
    "defaultValue": ""
  },
  "landmark": {
    "type": "string",
    "defaultValue": ""
  },
  "city": {
    "type": "string",
    "defaultValue": ""
  },
  "district": {
    "type": "string",
    "defaultValue": ""
  },
  "country": {
    "type": "enum",
    "defaultValue": "india",
    "uiType": "dropdown",
    "possibleValues": [
      "india",
      "usa",
      "uk"
    ]
  },
  "pincode": {
    "type": "string",
    "defaultValue": ""
  },
  "passportNo": {
    "type": "string",
    "defaultValue": ""
  },
  "occupation": {
    "type": "enum",
    "defaultValue": "service",
    "uiType": "dropdown",
    "possibleValues": [
      "service",
      "business",
      "artist",
      "others"
    ]
  },
  "parentFFN": {
    "type": "string",
    "defaultValue": ""
  },
  "nationality": {
    "type": "string",
    "defaultValue": "indian"
  },
  "passportIssualCountry": {
    "type": "enum",
    "defaultValue": "india",
    "uiType": "dropdown",
    "possibleValues": [
      "india",
      "usa",
      "uk"
    ]
  },
  "passportExpiry": {
    "type": "date",
    "defaultValue": "current_date"
  }
}